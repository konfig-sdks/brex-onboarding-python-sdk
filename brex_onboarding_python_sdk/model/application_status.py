# coding: utf-8

"""
    Onboarding API

     The onboarding API allows you to refer your customers and personal contacts to Brex. 

    The version of the OpenAPI document: 1.0
    Contact: developer-access@brex.com
    Created by: https://brex.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from brex_onboarding_python_sdk import schemas  # noqa: F401


class ApplicationStatus(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    Application status of a product.

`NO_ACCOUNT` - There is no active application, and the product account is not provisioned.

`ACTIVE` - The application is approved, and the product account is provisioned.

`NOT_SUBMITTED` - The application is started but not yet submitted.

`INFORMATION_PENDING` - The application is submitted and additional information is requested.

`MANUAL_REVIEW` - The application is under manual review.

`PROCESSING` - The application is submitted and is under review.

`REJECTED` - The application is rejected.

`CLOSED` - The product account is closed.

    """


    class MetaOapg:
        enum_value_to_name = {
            "NO_ACCOUNT": "NO_ACCOUNT",
            "ACTIVE": "ACTIVE",
            "NOT_SUBMITTED": "NOT_SUBMITTED",
            "INFORMATION_PENDING": "INFORMATION_PENDING",
            "MANUAL_REVIEW": "MANUAL_REVIEW",
            "PROCESSING": "PROCESSING",
            "REJECTED": "REJECTED",
            "CLOSED": "CLOSED",
        }
    
    @schemas.classproperty
    def NO_ACCOUNT(cls):
        return cls("NO_ACCOUNT")
    
    @schemas.classproperty
    def ACTIVE(cls):
        return cls("ACTIVE")
    
    @schemas.classproperty
    def NOT_SUBMITTED(cls):
        return cls("NOT_SUBMITTED")
    
    @schemas.classproperty
    def INFORMATION_PENDING(cls):
        return cls("INFORMATION_PENDING")
    
    @schemas.classproperty
    def MANUAL_REVIEW(cls):
        return cls("MANUAL_REVIEW")
    
    @schemas.classproperty
    def PROCESSING(cls):
        return cls("PROCESSING")
    
    @schemas.classproperty
    def REJECTED(cls):
        return cls("REJECTED")
    
    @schemas.classproperty
    def CLOSED(cls):
        return cls("CLOSED")
